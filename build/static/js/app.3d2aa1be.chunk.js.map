{"version":3,"sources":["src/assets/images/indonesia.png","src/assets/images/english.png","src/assets/images/profile.jpg","src/utils/appContext.js","src/components/btmNav/styleSheet.js","src/components/btmNav/index.js","src/components/statusBar/styleSheet.js","src/components/statusBar/index.js","src/components/header/styleSheet.js","src/components/header/index.js","src/screens/home/styleSheet.js","src/screens/home/index.js","src/screens/detail/styleSheet.js","src/screens/detail/index.js","src/screens/words/styleSheet.js","src/screens/words/index.js","src/screens/profile/styleSheet.js","src/screens/profile/index.js","App.js","index.js"],"names":["module","exports","AppContext","React","createContext","styleSheet","props","StyleSheet","create","btmNavContainer","paddingVertical","backgroundColor","colorScheme","borderTopWidth","borderTopColor","flexDirection","alignItems","justifyContent","navItem","itemText","fontSize","responsiveFontSize","fontWeight","BtmNav","useContext","isThemeAuto","isDarkMode","navigation","useNavigation","route","useRoute","systemColorScheme","useColorScheme","styles","name","View","style","TouchableOpacity","activeOpacity","onPress","navigate","Ionicons","size","color","Text","statusBarContainer","height","AppStatusBar","statusBarHeight","Constants","StatusBar","headerContainer","paddingBottom","overflow","header","elevation","navBtn","marginHorizontal","headerTitleContainer","flex","title","subtitle","Header","useState","setTitle","setSubtitle","useEffect","params","item","Indonesia","English","goBack","homeScreen","searchInput","borderRadius","padding","marginTop","listContainer","wordsList","paddingTop","wordCard","marginBottom","cardImage","width","responsiveWidth","marginRight","cardTextContainer","cardTextID","cardTextEN","HomeScreen","search","setSearch","TextInput","value","onChangeText","placeholder","placeholderTextColor","selectionColor","FlatList","overScrollMode","showsVerticalScrollIndicator","data","length","wordsDb","filter","Object","keys","some","val","toLowerCase","includes","keyExtractor","_","index","toString","renderItem","Image","source","uri","imageUrl","detailScreen","contentContainer","marginVertical","imageContainer","paddingHorizontal","image","cardContainer","cardLeft","cardRight","marginLeft","cardImageContainer","textCountry","textWord","DetailScreen","require","wordsScreen","card","WordsScreen","wordDb","itemDimension","profileScreen","profileContainer","profileImage","profileName","profileEmail","btnEdit","btnEditText","btnItem","iconItem","itemTextContainer","itemTitle","itemSubtitle","ProfileScreen","setIsThemeAuto","setIsDarkMode","getThemeAuto","a","async","AsyncStorage","getItem","then","JSON","parse","catch","err","console","log","getThemeColor","useFocusEffect","useCallback","setItem","stringify","Switch","thumbColor","trackColor","true","false","onValueChange","disabled","App","Stack","createNativeStackNavigator","Provider","NavigationContainer","Navigator","initialRouteName","screenOptions","headerShown","animation","Screen","component","registerRootComponent"],"mappings":"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","file":"static/js/app.3d2aa1be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/indonesia.039119af.png\";","module.exports = __webpack_public_path__ + \"static/media/english.a28b98c7.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.ffa7323c.jpg\";","import React from \"react\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;\r\n","import { StyleSheet } from \"react-native\";\r\nimport { responsiveFontSize } from \"react-native-responsive-dimensions\";\r\n\r\nconst styleSheet = (props) =>\r\n  StyleSheet.create({\r\n    btmNavContainer: {\r\n      paddingVertical: 10,\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#2d333b\" : \"#f8f9f9\",\r\n      borderTopWidth: 1,\r\n      borderTopColor: props.colorScheme === \"dark\" ? \"#2d333b\" : \"#e2e6eb\",\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-around\",\r\n    },\r\n    navItem: {\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    itemText: {\r\n      fontSize: responsiveFontSize(1.6),\r\n      fontWeight: \"bold\",\r\n    },\r\n  });\r\n\r\nexport default styleSheet;\r\n","import React, { useContext } from \"react\";\r\nimport { Text, View, useColorScheme, TouchableOpacity } from \"react-native\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport AppContext from \"../../utils/appContext\";\r\n\r\nimport styleSheet from \"./styleSheet\";\r\n\r\nconst BtmNav = () => {\r\n  const { isThemeAuto, isDarkMode } = useContext(AppContext);\r\n\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n  const systemColorScheme = useColorScheme();\r\n  const colorScheme =\r\n    isThemeAuto === null\r\n      ? systemColorScheme\r\n      : isThemeAuto\r\n      ? systemColorScheme\r\n      : isDarkMode\r\n      ? \"dark\"\r\n      : \"light\";\r\n  const styles = styleSheet({ name: route.name, colorScheme });\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.btmNavContainer}>\r\n        <TouchableOpacity\r\n          style={styles.navItem}\r\n          activeOpacity={route.name === \"Home\" ? 1 : 0.5}\r\n          onPress={() => {\r\n            if (route.name === \"Home\") {\r\n              return;\r\n            } else {\r\n              navigation.navigate(\"Home\");\r\n            }\r\n          }}\r\n        >\r\n          <Ionicons\r\n            name=\"home\"\r\n            size={28}\r\n            color={\r\n              colorScheme === \"dark\"\r\n                ? route.name === \"Home\"\r\n                  ? \"#fafafa\"\r\n                  : \"#768383\"\r\n                : route.name === \"Home\"\r\n                ? \"#6a8dff\"\r\n                : \"#babfc4\"\r\n            }\r\n          />\r\n\r\n          <Text\r\n            style={[\r\n              styles.itemText,\r\n              {\r\n                color:\r\n                  colorScheme === \"dark\"\r\n                    ? route.name === \"Home\"\r\n                      ? \"#fafafa\"\r\n                      : \"#768383\"\r\n                    : route.name === \"Home\"\r\n                    ? \"#6a8dff\"\r\n                    : \"#babfc4\",\r\n              },\r\n            ]}\r\n          >\r\n            Home\r\n          </Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={styles.navItem}\r\n          activeOpacity={route.name === \"Words\" ? 1 : 0.5}\r\n          onPress={() => {\r\n            if (route.name === \"Words\") {\r\n              return;\r\n            } else {\r\n              navigation.navigate(\"Words\");\r\n            }\r\n          }}\r\n        >\r\n          <Ionicons\r\n            name=\"book\"\r\n            size={28}\r\n            color={\r\n              colorScheme === \"dark\"\r\n                ? route.name === \"Words\"\r\n                  ? \"#fafafa\"\r\n                  : \"#768383\"\r\n                : route.name === \"Words\"\r\n                ? \"#6a8dff\"\r\n                : \"#babfc4\"\r\n            }\r\n          />\r\n\r\n          <Text\r\n            style={[\r\n              styles.itemText,\r\n              {\r\n                color:\r\n                  colorScheme === \"dark\"\r\n                    ? route.name === \"Words\"\r\n                      ? \"#fafafa\"\r\n                      : \"#768383\"\r\n                    : route.name === \"Words\"\r\n                    ? \"#6a8dff\"\r\n                    : \"#babfc4\",\r\n              },\r\n            ]}\r\n          >\r\n            Word List\r\n          </Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity\r\n          style={styles.navItem}\r\n          activeOpacity={route.name === \"Profile\" ? 1 : 0.5}\r\n          onPress={() => {\r\n            if (route.name === \"Profile\") {\r\n              return;\r\n            } else {\r\n              navigation.navigate(\"Profile\");\r\n            }\r\n          }}\r\n        >\r\n          <Ionicons\r\n            name=\"person\"\r\n            size={28}\r\n            color={\r\n              colorScheme === \"dark\"\r\n                ? route.name === \"Profile\"\r\n                  ? \"#fafafa\"\r\n                  : \"#768383\"\r\n                : route.name === \"Profile\"\r\n                ? \"#6a8dff\"\r\n                : \"#babfc4\"\r\n            }\r\n          />\r\n\r\n          <Text\r\n            style={[\r\n              styles.itemText,\r\n              {\r\n                color:\r\n                  colorScheme === \"dark\"\r\n                    ? route.name === \"Profile\"\r\n                      ? \"#fafafa\"\r\n                      : \"#768383\"\r\n                    : route.name === \"Profile\"\r\n                    ? \"#6a8dff\"\r\n                    : \"#babfc4\",\r\n              },\r\n            ]}\r\n          >\r\n            Profile\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BtmNav;\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nconst styleSheet = (props) =>\r\n  StyleSheet.create({\r\n    statusBarContainer: {\r\n      height: props.height,\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#2d333b\" : \"#f8f9f9\",\r\n    },\r\n  });\r\n\r\nexport default styleSheet;\r\n","import React, { useContext } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { View, useColorScheme, StatusBar as SB } from \"react-native\";\r\nimport AppContext from \"../../utils/appContext\";\r\nimport Constants from 'expo-constants'\r\n\r\nimport styleSheet from \"./styleSheet\";\r\n\r\nconst AppStatusBar = () => {\r\n  const { isThemeAuto, isDarkMode } = useContext(AppContext);\r\n\r\n  const statusBarHeight = Constants.statusBarHeight;\r\n\r\n  const systemColorScheme = useColorScheme();\r\n  const colorScheme =\r\n    isThemeAuto === null\r\n      ? systemColorScheme\r\n      : isThemeAuto\r\n      ? systemColorScheme\r\n      : isDarkMode\r\n      ? \"dark\"\r\n      : \"light\";\r\n  const styles = styleSheet({ height: statusBarHeight, colorScheme });\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.statusBarContainer}>\r\n        <StatusBar\r\n          style={isThemeAuto ? \"auto\" : isDarkMode ? \"light\" : \"dark\"}\r\n        />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppStatusBar;\r\n","import { StyleSheet } from \"react-native\";\r\nimport { responsiveFontSize } from \"react-native-responsive-dimensions\";\r\n\r\nconst styleSheet = (props) =>\r\n  StyleSheet.create({\r\n    headerContainer: {\r\n      paddingBottom: 1,\r\n      overflow: \"hidden\",\r\n    },\r\n    header: {\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#2d333b\" : \"#f8f9f9\",\r\n      elevation: 2,\r\n      paddingVertical: 14,\r\n      flexDirection: \"row\",\r\n      justifyContent: props.name === \"Home\" ? \"center\" : \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n    navBtn: {\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      marginHorizontal: 15,\r\n    },\r\n    headerTitleContainer: {\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: props.name === \"Home\" ? \"center\" : \"flex-start\",\r\n    },\r\n    title: {\r\n      color: props.colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\",\r\n      fontWeight: \"bold\",\r\n      fontSize: responsiveFontSize(2.4),\r\n    },\r\n    subtitle: {\r\n      color: props.colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\",\r\n      fontSize: responsiveFontSize(1.9),\r\n    },\r\n  });\r\n\r\nexport default styleSheet;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Text, View, useColorScheme, TouchableOpacity } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { useRoute, useNavigation } from \"@react-navigation/native\";\r\nimport AppContext from \"../../utils/appContext\";\r\n\r\nimport AppStatusBar from \"../statusBar\";\r\n\r\nimport styleSheet from \"./styleSheet\";\r\n\r\nconst Header = () => {\r\n  const { isThemeAuto, isDarkMode } = useContext(AppContext);\r\n\r\n  const route = useRoute();\r\n  const navigation = useNavigation();\r\n  const systemColorScheme = useColorScheme();\r\n  const colorScheme =\r\n    isThemeAuto === null\r\n      ? systemColorScheme\r\n      : isThemeAuto\r\n      ? systemColorScheme\r\n      : isDarkMode\r\n      ? \"dark\"\r\n      : \"light\";\r\n  const styles = styleSheet({ name: route.name, colorScheme });\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [subtitle, setSubtitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const { name } = route;\r\n\r\n    if (name === \"Home\") {\r\n      setTitle(\"Kamus Mini\");\r\n      setSubtitle(\"Cari Terjemahan Kata ID ke ENG\");\r\n    } else if (name === \"Words\") {\r\n      setTitle(\"Daftar Kata\");\r\n      setSubtitle(\"Daftar Kata Yang Tersedia\");\r\n    } else if (name === \"Profile\") {\r\n      setTitle(\"Profile\");\r\n      setSubtitle(\"Profile Kamu\");\r\n    } else if (name === \"Detail\") {\r\n      setTitle(route.params.item.Indonesia);\r\n      setSubtitle(route.params.item.English);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <AppStatusBar />\r\n\r\n      <View style={styles.headerContainer}>\r\n        <View style={styles.header}>\r\n          {route.name !== \"Home\" && (\r\n            <TouchableOpacity\r\n              style={styles.navBtn}\r\n              activeOpacity={0.5}\r\n              onPress={() => navigation.goBack()}\r\n            >\r\n              <Ionicons\r\n                name=\"arrow-back-circle\"\r\n                size={30}\r\n                color={colorScheme === \"dark\" ? \"#fafafa\" : \"#6a8dff\"}\r\n              />\r\n            </TouchableOpacity>\r\n          )}\r\n\r\n          <View style={styles.headerTitleContainer}>\r\n            <Text style={styles.title}>{title}</Text>\r\n            <Text style={styles.subtitle}>{subtitle}</Text>\r\n          </View>\r\n\r\n          {route.name !== \"Home\" && <View />}\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { StyleSheet } from \"react-native\";\r\nimport {\r\n  responsiveWidth,\r\n  responsiveFontSize,\r\n} from \"react-native-responsive-dimensions\";\r\n\r\nconst styleSheet = (props) =>\r\n  StyleSheet.create({\r\n    homeScreen: {\r\n      flex: 1,\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#22272e\" : \"#ffffff\",\r\n    },\r\n    searchInput: {\r\n      elevation: 1,\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#2d333b\" : \"#f6f8fa\",\r\n      borderRadius: 4,\r\n      padding: 10,\r\n      marginHorizontal: 20,\r\n      marginTop: 10,\r\n      color: props.colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\",\r\n    },\r\n    listContainer: {\r\n      flex: 1,\r\n    },\r\n    wordsList: {\r\n      paddingTop: 10,\r\n    },\r\n    wordCard: {\r\n      marginBottom: 15,\r\n      marginHorizontal: 20,\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#2d333b\" : \"#f6f8fa\",\r\n      elevation: 1,\r\n      padding: 10,\r\n      borderRadius: 6,\r\n      flexDirection: \"row\",\r\n    },\r\n    cardImage: {\r\n      width: responsiveWidth(14),\r\n      height: responsiveWidth(14),\r\n      marginRight: 15,\r\n      borderRadius: 4,\r\n    },\r\n    cardTextContainer: {\r\n      justifyContent: \"center\",\r\n    },\r\n    cardTextID: {\r\n      color: props.colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\",\r\n      fontWeight: \"bold\",\r\n      fontSize: responsiveFontSize(1.9),\r\n    },\r\n    cardTextEN: {\r\n      color: props.colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\",\r\n      fontSize: responsiveFontSize(1.9),\r\n    },\r\n  });\r\n\r\nexport default styleSheet;\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  useColorScheme,\r\n  TextInput,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  Image,\r\n} from \"react-native\";\r\nimport wordsDb from \"../../assets/data/data.json\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport AppContext from \"../../utils/appContext\";\r\n\r\nimport BtmNav from \"../../components/btmNav\";\r\nimport Header from \"../../components/header\";\r\n\r\nimport styleSheet from \"./styleSheet\";\r\n\r\nconst HomeScreen = () => {\r\n  const { isThemeAuto, isDarkMode } = useContext(AppContext);\r\n\r\n  const navigation = useNavigation();\r\n  const systemColorScheme = useColorScheme();\r\n  const colorScheme =\r\n    isThemeAuto === null\r\n      ? systemColorScheme\r\n      : isThemeAuto\r\n      ? systemColorScheme\r\n      : isDarkMode\r\n      ? \"dark\"\r\n      : \"light\";\r\n  const styles = styleSheet({ colorScheme });\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const handleSearch = () => {\r\n    if (search.length > 0) {\r\n      return wordsDb.filter((item) =>\r\n        Object.keys(item).some((val) =>\r\n          item[val].toLowerCase().includes(search.toLowerCase())\r\n        )\r\n      );\r\n    } else {\r\n      return wordsDb;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.homeScreen}>\r\n        <Header />\r\n\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          value={search}\r\n          onChangeText={(value) => setSearch(value)}\r\n          placeholder=\"Cari kata\"\r\n          placeholderTextColor=\"#6e7781\"\r\n          selectionColor=\"#6a8dff\"\r\n        />\r\n\r\n        <View style={styles.listContainer}>\r\n          <FlatList\r\n            style={styles.wordsList}\r\n            overScrollMode=\"never\"\r\n            showsVerticalScrollIndicator={false}\r\n            data={handleSearch()}\r\n            keyExtractor={(_, index) => index.toString()}\r\n            renderItem={({ item }) => (\r\n              <TouchableOpacity\r\n                activeOpacity={0.5}\r\n                style={styles.wordCard}\r\n                onPress={() => navigation.navigate(\"Detail\", { item })}\r\n              >\r\n                <Image\r\n                  style={styles.cardImage}\r\n                  source={{ uri: item.imageUrl }}\r\n                />\r\n\r\n                <View style={styles.cardTextContainer}>\r\n                  <Text style={styles.cardTextID}>{item.Indonesia}</Text>\r\n                  <Text style={styles.cardTextEN}>{item.English}</Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            )}\r\n          />\r\n        </View>\r\n\r\n        <BtmNav />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import { StyleSheet } from \"react-native\";\r\nimport {\r\n  responsiveWidth,\r\n  responsiveFontSize,\r\n} from \"react-native-responsive-dimensions\";\r\n\r\nconst styleSheet = (props) =>\r\n  StyleSheet.create({\r\n    detailScreen: {\r\n      flex: 1,\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#22272e\" : \"#ffffff\",\r\n    },\r\n    contentContainer: {\r\n      flex: 1,\r\n      marginVertical: 10,\r\n    },\r\n    imageContainer: {\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      paddingHorizontal: 15,\r\n    },\r\n    image: {\r\n      width: \"100%\",\r\n      height: 200,\r\n      borderRadius: 8,\r\n    },\r\n    cardContainer: {\r\n      flexDirection: \"row\",\r\n      marginVertical: 20,\r\n      marginHorizontal: 15,\r\n    },\r\n    cardLeft: {\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#2d333b\" : \"#f6f8fa\",\r\n      elevation: 1,\r\n      borderRadius: 6,\r\n      flex: 1,\r\n      marginRight: 7,\r\n      padding: 10,\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n    },\r\n    cardRight: {\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#2d333b\" : \"#f6f8fa\",\r\n      elevation: 1,\r\n      borderRadius: 6,\r\n      flex: 1,\r\n      marginLeft: 7,\r\n      padding: 10,\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n    },\r\n    cardImageContainer: {\r\n      elevation: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      borderRadius: 100,\r\n      width: responsiveWidth(15),\r\n      height: responsiveWidth(15),\r\n      marginRight: 10,\r\n    },\r\n    cardImage: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      borderRadius: 100,\r\n    },\r\n    textCountry: {\r\n      color: props.colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\",\r\n      fontSize: responsiveFontSize(1.9),\r\n    },\r\n    textWord: {\r\n      color: props.colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\",\r\n      fontWeight: \"bold\",\r\n      fontSize: responsiveFontSize(1.9),\r\n    },\r\n  });\r\n\r\nexport default styleSheet;\r\n","import React, { useContext } from \"react\";\r\nimport { Text, View, useColorScheme, Image } from \"react-native\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport AppContext from \"../../utils/appContext\";\r\n\r\nimport BtmNav from \"../../components/btmNav\";\r\nimport Header from \"../../components/header\";\r\n\r\nimport styleSheet from \"./styleSheet\";\r\n\r\nconst DetailScreen = () => {\r\n  const { isThemeAuto, isDarkMode } = useContext(AppContext);\r\n\r\n  const route = useRoute();\r\n  const systemColorScheme = useColorScheme();\r\n  const colorScheme =\r\n    isThemeAuto === null\r\n      ? systemColorScheme\r\n      : isThemeAuto\r\n      ? systemColorScheme\r\n      : isDarkMode\r\n      ? \"dark\"\r\n      : \"light\";\r\n  const styles = styleSheet({ colorScheme });\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.detailScreen}>\r\n        <Header />\r\n\r\n        <View style={styles.contentContainer}>\r\n          <View style={styles.imageContainer}>\r\n            <Image\r\n              style={styles.image}\r\n              source={{ uri: route.params.item.imageUrl }}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.cardContainer}>\r\n            <View style={styles.cardLeft}>\r\n              <View style={styles.cardImageContainer}>\r\n                <Image\r\n                  style={styles.cardImage}\r\n                  source={require(\"../../assets/images/indonesia.png\")}\r\n                />\r\n              </View>\r\n\r\n              <View>\r\n                <Text style={styles.textCountry}>Indonesia</Text>\r\n                <Text style={styles.textWord}>\r\n                  {route.params.item.Indonesia}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.cardRight}>\r\n              <View style={styles.cardImageContainer}>\r\n                <Image\r\n                  style={styles.cardImage}\r\n                  source={require(\"../../assets/images/english.png\")}\r\n                />\r\n              </View>\r\n\r\n              <View>\r\n                <Text style={styles.textCountry}>Englsih</Text>\r\n                <Text style={styles.textWord}>{route.params.item.English}</Text>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n\r\n        <BtmNav />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DetailScreen;\r\n","import { StyleSheet } from \"react-native\";\r\nimport {\r\n  responsiveFontSize,\r\n} from \"react-native-responsive-dimensions\";\r\n\r\nconst styleSheet = (props) =>\r\n  StyleSheet.create({\r\n    wordsScreen: {\r\n      flex: 1,\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#22272e\" : \"#ffffff\",\r\n    },\r\n    contentContainer: {\r\n      flex: 1,\r\n    },\r\n    card: {\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#2d333b\" : \"#f6f8fa\",\r\n      elevation: 1,\r\n      marginTop: 10,\r\n      borderRadius: 3,\r\n      padding: 10,\r\n    },\r\n    cardTextID: {\r\n      color: props.colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\",\r\n      fontWeight: \"bold\",\r\n      fontSize: responsiveFontSize(1.9),\r\n    },\r\n    cardTextEN: {\r\n      color: props.colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\",\r\n      fontSize: responsiveFontSize(1.9),\r\n    },\r\n  });\r\n\r\nexport default styleSheet;\r\n","import React, { useContext } from \"react\";\r\nimport { Text, View, useColorScheme } from \"react-native\";\r\nimport { FlatGrid } from \"react-native-super-grid\";\r\nimport wordDb from \"../../assets/data/data.json\";\r\nimport AppContext from \"../../utils/appContext\";\r\n\r\nimport BtmNav from \"../../components/btmNav\";\r\nimport Header from \"../../components/header\";\r\n\r\nimport styleSheet from \"./styleSheet\";\r\n\r\nconst WordsScreen = () => {\r\n  const { isThemeAuto, isDarkMode } = useContext(AppContext);\r\n\r\n  const systemColorScheme = useColorScheme();\r\n  const colorScheme =\r\n    isThemeAuto === null\r\n      ? systemColorScheme\r\n      : isThemeAuto\r\n      ? systemColorScheme\r\n      : isDarkMode\r\n      ? \"dark\"\r\n      : \"light\";\r\n  const styles = styleSheet({ colorScheme });\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.wordsScreen}>\r\n        <Header />\r\n\r\n        <View style={styles.contentContainer}>\r\n          <FlatGrid\r\n            data={wordDb}\r\n            overScrollMode=\"never\"\r\n            showsVerticalScrollIndicator={false}\r\n            itemDimension={130}\r\n            renderItem={({ item }) => (\r\n              <View style={styles.card}>\r\n                <Text style={styles.cardTextID}>{item.Indonesia}</Text>\r\n                <Text style={styles.cardTextEN}>{item.English}</Text>\r\n              </View>\r\n            )}\r\n          />\r\n        </View>\r\n\r\n        <BtmNav />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WordsScreen;\r\n","import { StyleSheet } from \"react-native\";\r\nimport {\r\n  responsiveWidth,\r\n  responsiveFontSize,\r\n} from \"react-native-responsive-dimensions\";\r\n\r\nconst styleSheet = (props) =>\r\n  StyleSheet.create({\r\n    profileScreen: {\r\n      flex: 1,\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#22272e\" : \"#ffffff\",\r\n    },\r\n    contentContainer: {\r\n      flex: 1,\r\n    },\r\n    profileContainer: {\r\n      marginTop: 10,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#22272e\" : \"#ffffff\",\r\n      paddingVertical: 20,\r\n    },\r\n    profileImage: {\r\n      width: responsiveWidth(24),\r\n      height: responsiveWidth(24),\r\n      borderRadius: 100,\r\n    },\r\n    profileName: {\r\n      color: props.colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\",\r\n      fontWeight: \"bold\",\r\n      fontSize: responsiveFontSize(2.4),\r\n      marginTop: 10,\r\n    },\r\n    profileEmail: {\r\n      color: \"#6e7781\",\r\n    },\r\n    btnEdit: {\r\n      marginTop: 15,\r\n      backgroundColor: \"#6a8dff\",\r\n      paddingVertical: 10,\r\n      paddingHorizontal: 20,\r\n      borderRadius: 100,\r\n    },\r\n    btnEditText: {\r\n      color: \"#ffffff\",\r\n      fontWeight: \"bold\",\r\n      fontSize: responsiveFontSize(1.9),\r\n    },\r\n    btnItem: {\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n      backgroundColor: props.colorScheme === \"dark\" ? \"#2d333b\" : \"#f6f8fa\",\r\n      paddingVertical: 10,\r\n    },\r\n    iconItem: {\r\n      marginHorizontal: 10,\r\n    },\r\n    itemTextContainer: {\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n    },\r\n    itemTitle: {\r\n      color: props.colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\",\r\n      fontWeight: \"bold\",\r\n      fontSize: responsiveFontSize(1.9),\r\n    },\r\n    itemSubtitle: {\r\n      color: props.colorScheme === \"dark\" ? \"#c7c7c7\" : \"#707070\",\r\n      fontSize: responsiveFontSize(1.9),\r\n    },\r\n  });\r\n\r\nexport default styleSheet;\r\n","import React, { useCallback, useContext, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  useColorScheme,\r\n  Image,\r\n  TouchableOpacity,\r\n  Switch,\r\n} from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useFocusEffect } from \"@react-navigation/native\";\r\nimport AppContext from \"../../utils/appContext\";\r\n\r\nimport BtmNav from \"../../components/btmNav\";\r\nimport Header from \"../../components/header\";\r\n\r\nimport styleSheet from \"./styleSheet\";\r\n\r\nconst ProfileScreen = () => {\r\n  const { isThemeAuto, setIsThemeAuto, isDarkMode, setIsDarkMode } =\r\n    useContext(AppContext);\r\n\r\n  const systemColorScheme = useColorScheme();\r\n  const colorScheme =\r\n    isThemeAuto === null\r\n      ? systemColorScheme\r\n      : isThemeAuto\r\n      ? systemColorScheme\r\n      : isDarkMode\r\n      ? \"dark\"\r\n      : \"light\";\r\n  const styles = styleSheet({ colorScheme });\r\n\r\n  const getThemeAuto = async () => {\r\n    try {\r\n      await AsyncStorage.getItem(\"themeAuto\")\r\n        .then((value) => {\r\n          setIsThemeAuto(JSON.parse(value));\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getThemeColor = async () => {\r\n    try {\r\n      await AsyncStorage.getItem(\"themeColor\")\r\n        .then((value) => {\r\n          const val = JSON.parse(value);\r\n\r\n          if (val === \"dark\") {\r\n            setIsDarkMode(true);\r\n          } else {\r\n            setIsDarkMode(false);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const setThemeAuto = async (value) => {\r\n    try {\r\n      await AsyncStorage.setItem(\"themeAuto\", JSON.stringify(value));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const setThemeColor = async (value) => {\r\n    try {\r\n      await AsyncStorage.setItem(\r\n        \"themeColor\",\r\n        JSON.stringify(value === true ? \"dark\" : \"light\")\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      getThemeAuto();\r\n      getThemeColor();\r\n    }, [])\r\n  );\r\n\r\n  useEffect(() => {\r\n    setThemeAuto(isThemeAuto);\r\n  }, [isThemeAuto]);\r\n\r\n  useEffect(() => {\r\n    setThemeColor(isDarkMode);\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.profileScreen}>\r\n        <Header />\r\n\r\n        <View style={styles.contentContainer}>\r\n          <View style={styles.profileContainer}>\r\n            <Image\r\n              style={styles.profileImage}\r\n              source={require(\"../../assets/images/profile.jpg\")}\r\n            />\r\n\r\n            <Text style={styles.profileName}>Bhakti Buana</Text>\r\n            <Text style={styles.profileEmail}>bhaktibuana19@gmail.com</Text>\r\n\r\n            <TouchableOpacity\r\n              style={styles.btnEdit}\r\n              activeOpacity={0.5}\r\n              onPress={() => {\r\n                getThemeAuto();\r\n                getThemeColor();\r\n              }}\r\n            >\r\n              <Text style={styles.btnEditText}>Edit Profile</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View>\r\n            <TouchableOpacity activeOpacity={0.5} style={styles.btnItem}>\r\n              <Ionicons\r\n                style={styles.iconItem}\r\n                name=\"globe\"\r\n                size={28}\r\n                color={colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\"}\r\n              />\r\n\r\n              <View style={styles.itemTextContainer}>\r\n                <Text style={styles.itemTitle}>Bahasa</Text>\r\n                <Text style={styles.itemSubtitle}>Ganti bahasa saat ini</Text>\r\n              </View>\r\n\r\n              <Ionicons\r\n                style={styles.iconItem}\r\n                name=\"chevron-forward\"\r\n                size={28}\r\n                color={colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\"}\r\n              />\r\n            </TouchableOpacity>\r\n\r\n            <View style={styles.btnItem}>\r\n              <Ionicons\r\n                style={styles.iconItem}\r\n                name=\"color-palette\"\r\n                size={28}\r\n                color={colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\"}\r\n              />\r\n\r\n              <View style={styles.itemTextContainer}>\r\n                <Text style={styles.itemTitle}>Tema Otomatis</Text>\r\n                <Text style={styles.itemSubtitle}>Tema berdasarkan sistem</Text>\r\n              </View>\r\n\r\n              <Switch\r\n                style={styles.iconItem}\r\n                value={isThemeAuto}\r\n                thumbColor={colorScheme === \"dark\" ? \"#404040\" : \"#ffffff\"}\r\n                trackColor={{\r\n                  true: \"#6a8dff\",\r\n                  false: \"#707070\",\r\n                }}\r\n                onValueChange={() => setIsThemeAuto(!isThemeAuto)}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.btnItem}>\r\n              <Ionicons\r\n                style={styles.iconItem}\r\n                name=\"moon\"\r\n                size={28}\r\n                color={\r\n                  isThemeAuto\r\n                    ? \"#818181\"\r\n                    : colorScheme === \"dark\"\r\n                    ? \"#fafafa\"\r\n                    : \"#404040\"\r\n                }\r\n              />\r\n\r\n              <View style={styles.itemTextContainer}>\r\n                <Text\r\n                  style={[\r\n                    styles.itemTitle,\r\n                    {\r\n                      color: isThemeAuto\r\n                        ? \"#818181\"\r\n                        : isDarkMode\r\n                        ? \"#fafafa\"\r\n                        : \"#404040\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  Mode Gelap\r\n                </Text>\r\n\r\n                <Text\r\n                  style={[\r\n                    styles.itemSubtitle,\r\n                    {\r\n                      color: isThemeAuto\r\n                        ? \"#818181\"\r\n                        : isDarkMode\r\n                        ? \"#c7c7c7\"\r\n                        : \"#707070\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  Ubah tema aplikasi\r\n                </Text>\r\n              </View>\r\n\r\n              <Switch\r\n                style={styles.iconItem}\r\n                value={isDarkMode}\r\n                disabled={isThemeAuto}\r\n                thumbColor={\r\n                  isThemeAuto ? \"#818181\" : isDarkMode ? \"#404040\" : \"#ffffff\"\r\n                }\r\n                trackColor={{\r\n                  true: isThemeAuto ? \"#818181\" : \"#6a8dff\",\r\n                  false: isThemeAuto ? \"#818181\" : \"#707070\",\r\n                }}\r\n                onValueChange={() => setIsDarkMode(!isDarkMode)}\r\n              />\r\n            </View>\r\n\r\n            <TouchableOpacity activeOpacity={0.5} style={styles.btnItem}>\r\n              <Ionicons\r\n                style={styles.iconItem}\r\n                name=\"information-circle\"\r\n                size={28}\r\n                color={colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\"}\r\n              />\r\n\r\n              <View style={styles.itemTextContainer}>\r\n                <Text style={styles.itemTitle}>Tentang Kami</Text>\r\n                <Text style={styles.itemSubtitle}>\r\n                  Tentang pengembang aplikasi\r\n                </Text>\r\n              </View>\r\n\r\n              <Ionicons\r\n                style={styles.iconItem}\r\n                name=\"chevron-forward\"\r\n                size={28}\r\n                color={colorScheme === \"dark\" ? \"#fafafa\" : \"#404040\"}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n\r\n        <BtmNav />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React, { useEffect, useState } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AppContext from \"./src/utils/appContext\";\n\nimport HomeScreen from \"./src/screens/home\";\nimport DetailScreen from \"./src/screens/detail\";\nimport WordsScreen from \"./src/screens/words\";\nimport ProfileScreen from \"./src/screens/profile\";\n\nconst App = () => {\n  const Stack = createNativeStackNavigator();\n\n  const [isThemeAuto, setIsThemeAuto] = useState(true);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  const getThemeAuto = async () => {\n    try {\n      await AsyncStorage.getItem(\"themeAuto\")\n        .then((value) => {\n          setIsThemeAuto(JSON.parse(value));\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getThemeColor = async () => {\n    try {\n      await AsyncStorage.getItem(\"themeColor\")\n        .then((value) => {\n          const val = JSON.parse(value);\n\n          if (val === \"dark\") {\n            setIsDarkMode(true);\n          } else {\n            setIsDarkMode(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const setThemeAuto = async () => {\n    try {\n      const themeAuto = await AsyncStorage.getItem(\"themeAuto\");\n      if (themeAuto === null) {\n        await AsyncStorage.setItem(\"themeAuto\", JSON.stringify(true));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const setThemeColor = async () => {\n    try {\n      const themeColor = await AsyncStorage.getItem(\"themeColor\");\n      if (themeColor === null) {\n        await AsyncStorage.setItem(\"themeColor\", JSON.stringify(\"light\"));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    setThemeAuto();\n    setThemeColor();\n    getThemeAuto();\n    getThemeColor();\n  }, []);\n\n  return (\n    <>\n      <AppContext.Provider\n        value={{ isThemeAuto, setIsThemeAuto, isDarkMode, setIsDarkMode }}\n      >\n        <NavigationContainer>\n          <Stack.Navigator\n            initialRouteName=\"Home\"\n            screenOptions={{\n              headerShown: false,\n              animation: \"none\",\n            }}\n          >\n            <Stack.Screen name=\"Home\" component={HomeScreen} />\n            <Stack.Screen name=\"Detail\" component={DetailScreen} />\n            <Stack.Screen name=\"Words\" component={WordsScreen} />\n            <Stack.Screen name=\"Profile\" component={ProfileScreen} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </AppContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}